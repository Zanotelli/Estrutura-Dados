ERRO

==1383== Memcheck, a memory error detector
==1383== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1383== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1383== Command: ./c
==1383==
==1383==
==1383== HEAP SUMMARY:
==1383==     in use at exit: 3,600 bytes in 9 blocks
==1383==   total heap usage: 10 allocs, 1 frees, 4,000 bytes allocated
==1383==
==1383== 3,600 bytes in 9 blocks are definitely lost in loss record 1 of 1
==1383==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so) 
==1383==    by 0x10918E: main (c3.c:9)
==1383==
==1383== LEAK SUMMARY:
==1383==    definitely lost: 3,600 bytes in 9 blocks
==1383==    indirectly lost: 0 bytes in 0 blocks
==1383==      possibly lost: 0 bytes in 0 blocks
==1383==    still reachable: 0 bytes in 0 blocks
==1383==         suppressed: 0 bytes in 0 blocks
==1383==
==1383== For lists of detected and suppressed errors, rerun with: -s
==1383== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


ANÁLISE

Foi identificado que o código aloca espaços de memória multiplas vezes
para a mesma variável, sempre perdendo a referência do espaço alocado antes.
Para resolver eu movi o 'free' para dentro do loop, desalocando os espaços
de memória antes de outra alocação