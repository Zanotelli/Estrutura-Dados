ERRO

==1371== Memcheck, a memory error detector
==1371== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1371== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==1371== Command: ./c2
==1371==
==1371== Conditional jump or move depends on uninitialised value(s)
==1371==    at 0x48D6B56: __vfprintf_internal (vfprintf-internal.c:1516)
==1371==    by 0x48C081E: printf (printf.c:33)
==1371==    at 0x48D6643: __vfprintf_internal (vfprintf-internal.c:1516)
==1371==    by 0x48C081E: printf (printf.c:33)
==1371==    by 0x1091F1: main (c2.c:11)
==1371==
==1371== Conditional jump or move depends on uninitialised value(s)
==1371==    at 0x48D5C85: __vfprintf_internal (vfprintf-internal.c:1516)
==1371==    by 0x48C081E: printf (printf.c:33)
==1371==    by 0x1091F1: main (c2.c:11)
==1371==
0 1 2 3 4 5 6 7 8 0
==1371==
==1371== HEAP SUMMARY:
==1371==     in use at exit: 0 bytes in 0 blocks
==1371==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==1371==
==1371== All heap blocks were freed -- no leaks are possible
==1371==
==1371== Use --track-origins=yes to see where uninitialised values come from
==1371== For lists of detected and suppressed errors, rerun with: -s
==1371== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)


ANÁLISE

O Valgrind identificou que o código tentava imprimir os dados de uma
posição do vetor que não havia sido inicializado. Para concertar o erro,
eu aumentei o número de interações do 'for' que inicializa os valores