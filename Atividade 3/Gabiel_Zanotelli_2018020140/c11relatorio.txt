ERRO

==81== Memcheck, a memory error detector
==81== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==81== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==81== Command: ./c
==81==
==81== Invalid write of size 2
==81==    at 0x1091B4: main (c11correto.c:9)
==81==  Address 0x4a8b048 is 0 bytes after a block of size 8 alloc'd
==81==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x10919E: main (c11correto.c:8)
==81==
==81== Invalid read of size 1
==81==    at 0x484ED24: strlen (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x48D6DB0: __vfprintf_internal (vfprintf-internal.c:1517)
==81==    by 0x48C081E: printf (printf.c:33)
==81==    by 0x1091E2: main (c11correto.c:11)
==81==  Address 0x4a8b048 is 0 bytes after a block of size 8 alloc'd
==81==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x10919E: main (c11correto.c:8)
==81==
==81== Invalid read of size 1
==81==    at 0x48EB7B4: _IO_new_file_xsputn (fileops.c:1218)
==81==    by 0x48EB7B4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==81==    by 0x48D708B: outstring_func (vfprintf-internal.c:239)
==81==    by 0x48D708B: __vfprintf_internal (vfprintf-internal.c:1517)
==81==    by 0x48C081E: printf (printf.c:33)
==81==    by 0x1091E2: main (c11correto.c:11)
==81==  Address 0x4a8b048 is 0 bytes after a block of size 8 alloc'd
==81==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x10919E: main (c11correto.c:8)
==81==
==81== Invalid read of size 1
==81==    at 0x48534C8: mempcpy (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x48EB6E4: _IO_new_file_xsputn (fileops.c:1235)
==81==    by 0x48EB6E4: _IO_file_xsputn@@GLIBC_2.2.5 (fileops.c:1196)
==81==    by 0x48D708B: outstring_func (vfprintf-internal.c:239)
==81==    by 0x48D708B: __vfprintf_internal (vfprintf-internal.c:1517)
==81==    by 0x48C081E: printf (printf.c:33)
==81==    by 0x1091E2: main (c11correto.c:11)
==81==  Address 0x4a8b048 is 0 bytes after a block of size 8 alloc'd
==81==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x10919E: main (c11correto.c:8)
==81==
81, Rolberton
==81== 
==81== HEAP SUMMARY:
==81==     in use at exit: 8 bytes in 1 blocks
==81==   total heap usage: 2 allocs, 1 frees, 1,032 bytes allocated
==81==
==81== 8 bytes in 1 blocks are definitely lost in loss record 1 of 1
==81==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==81==    by 0x10919E: main (c11correto.c:8)
==81==
==81== LEAK SUMMARY:
==81==    definitely lost: 8 bytes in 1 blocks
==81==    indirectly lost: 0 bytes in 0 blocks
==81==      possibly lost: 0 bytes in 0 blocks
==81==    still reachable: 0 bytes in 0 blocks
==81==         suppressed: 0 bytes in 0 blocks
==81==
==81== For lists of detected and suppressed errors, rerun with: -s
==81== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)

ANÁLISE

Uma palavra de 10 bytes "Holberton" estava sendo atribuída para uma
variável com apenas 8 bytes alocados. Para corrigir, se aumentou o tamanho
do espaço de memória para a variável 'msg' e se adicionou um comendo 'free'

==99== Memcheck, a memory error detector
==99== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==99== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==99== Command: ./c
==99==
99, Rolberton
==99== 
==99== HEAP SUMMARY:
==99==     in use at exit: 10 bytes in 1 blocks
==99==   total heap usage: 2 allocs, 1 frees, 1,034 bytes allocated
==99==
==99== 10 bytes in 1 blocks are definitely lost in loss record 1 of 1
==99==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==99==    by 0x10919E: main (c11correto.c:8)
==99==
==99== LEAK SUMMARY:
==99==    definitely lost: 10 bytes in 1 blocks
==99==    indirectly lost: 0 bytes in 0 blocks
==99==      possibly lost: 0 bytes in 0 blocks
==99==    still reachable: 0 bytes in 0 blocks
==99==         suppressed: 0 bytes in 0 blocks
==99==
==99== For lists of detected and suppressed errors, rerun with: -s
==99== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)